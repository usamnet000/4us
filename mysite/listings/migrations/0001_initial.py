# Generated by Django 2.2.5 on 2019-09-26 06:16

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import listings.models
import markdownx.models
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(choices=[('Omran', 'عمران'), ('AlBayda ', 'البيضاء'), ('Hodeidah', 'الحديدة'), ('Hollow', 'الجوف'), ('AlMahweet', 'المحويت'), ('Dhamar', 'ذمار'), ('Hajjah', 'حجة'), ('Ibb', 'إب'), ('Marib', 'مأرب'), ('Rima', 'ريمة'), ("Sa'ada", 'صعدة'), ("Sana'a", 'صنعاء'), ('Taiz', 'تعز'), ('Aden', 'عدن'), ('Abyan', 'أبين'), ('Dali', 'الضالع'), ('ALamrah', 'المهرة'), ('Hadramout', 'حضرموت'), ('Socotra', 'سقطرى'), ('Lahj', 'لحج'), ('Shabwah', 'شبوة')], max_length=20)),
                ('address', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=17, default=None, max_digits=19)),
                ('longitude', models.DecimalField(decimal_places=17, default=None, max_digits=19)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('image_main_path', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('firstName', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('lastName', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='UserProfile/%Y/%m/%d/')),
                ('description', models.TextField(blank=True, null=True)),
                ('hire_date', models.DateTimeField(default=datetime.datetime(2019, 9, 26, 9, 16, 37, 56843))),
                ('allowOtherToContactMe', models.BooleanField(blank=True, default=False)),
                ('smsAllNotifications', models.BooleanField(blank=True, default=True)),
                ('Subscription', models.BooleanField(blank=True, default=False)),
                ('screenName', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('pro', models.IntegerField(choices=[(0, ''), (1, 'وكيل عقارات / وسيط'), (2, 'مقرض عقاري'), (3, 'خدمات تحسين المنزل'), (4, 'مالك'), (5, 'مصور فوتوغرافي'), (6, 'باني منازل'), (7, 'مدير الملكية'), (8, 'العقارات المهنية الأخرى')], default=0)),
                ('title', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('companyName', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('companyAddress', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('companyCity', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('phoneCompany', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('CellPhone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('otherLicenseDescription', models.TextField(blank=True, null=True)),
                ('otherLicenseNumber', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('serviceAreas', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('Arabic', models.BooleanField(blank=True, default=False)),
                ('English', models.BooleanField(blank=True, default=False)),
                ('yearsExperience', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('Appraisal', models.BooleanField(blank=True, default=False)),
                ('CommercialRE', models.BooleanField(blank=True, default=False)),
                ('Escrow', models.BooleanField(blank=True, default=False)),
                ('Insurance', models.BooleanField(blank=True, default=False)),
                ('Legal', models.BooleanField(blank=True, default=False)),
                ('Moving', models.BooleanField(blank=True, default=False)),
                ('Notary', models.BooleanField(blank=True, default=False)),
                ('Staging', models.BooleanField(blank=True, default=False)),
                ('OTitle', models.BooleanField(blank=True, default=False)),
                ('Other', models.BooleanField(blank=True, default=False)),
                ('videoUrl', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('website', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('blog', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('facebook', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('twitter', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('linkedIn', models.CharField(blank=True, default='', max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('place', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='listing', serialize=False, to='listings.Place')),
                ('property_type', models.IntegerField(choices=[(1, 'للبيع من قبل المالك'), (2, 'سينهيء البناء قريباً'), (3, 'للبيع من قبل الوكيل'), (4, 'بناء جديد'), (5, 'بيت مفتوح')], default=1)),
                ('price', models.BigIntegerField()),
                ('roomsTotal', models.PositiveSmallIntegerField(null=True)),
                ('Bathrooms', models.PositiveSmallIntegerField(default=None)),
                ('bedrooms', models.PositiveSmallIntegerField(default=None)),
                ('Receptionrooms', models.PositiveSmallIntegerField(default=None)),
                ('livingArea', models.DecimalField(decimal_places=3, max_digits=19)),
                ('lotSize', models.DecimalField(decimal_places=3, max_digits=19)),
                ('unitType', models.IntegerField(choices=[(1, 'متر مربع'), (2, 'قدم مربع'), (3, 'فدان')], default=1)),
                ('yearBuilt', models.PositiveIntegerField(blank=True, help_text='Use the following format: <YYYY>', null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2019)])),
                ('remodelYear', models.PositiveIntegerField(blank=True, help_text='Use the following format: <YYYY>', null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2019)])),
                ('hoaPrice', models.BigIntegerField(blank=True, null=True)),
                ('groundTankSize', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('garageSize', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('homeDescription', models.TextField(blank=True, null=True)),
                ('whatYouLoveDescription', models.TextField(blank=True, null=True)),
                ('Dishwasher', models.BooleanField(blank=True, default=False)),
                ('Dryer', models.BooleanField(blank=True, default=False)),
                ('Freezer', models.BooleanField(blank=True, default=False)),
                ('GarbageDisposal', models.BooleanField(blank=True, default=False)),
                ('Microwave', models.BooleanField(blank=True, default=False)),
                ('Oven', models.BooleanField(blank=True, default=False)),
                ('Refrigerator', models.BooleanField(blank=True, default=False)),
                ('Washer', models.BooleanField(blank=True, default=False)),
                ('RadioGroup_Rashan', models.CharField(blank=True, max_length=5, null=True)),
                ('ACarpet', models.BooleanField(blank=True, default=False)),
                ('AConcrete', models.BooleanField(blank=True, default=False)),
                ('ATiles', models.BooleanField(blank=True, default=False)),
                ('ALinoleum', models.BooleanField(blank=True, default=False)),
                ('ADSoftwood', models.BooleanField(blank=True, default=False)),
                ('ADOther', models.BooleanField(blank=True, default=False)),
                ('BreakfastNook', models.BooleanField(blank=True, default=False)),
                ('DiningRoom', models.BooleanField(blank=True, default=False)),
                ('FamilyRoom', models.BooleanField(blank=True, default=False)),
                ('LaundryRoom', models.BooleanField(blank=True, default=False)),
                ('Library', models.BooleanField(blank=True, default=False)),
                ('MasterBath', models.BooleanField(blank=True, default=False)),
                ('Office', models.BooleanField(blank=True, default=False)),
                ('Workshop', models.BooleanField(blank=True, default=False)),
                ('roomCount', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('attic', models.BooleanField(blank=True, default=False)),
                ('cableReady', models.BooleanField(blank=True, default=False)),
                ('ceilingFan', models.BooleanField(blank=True, default=False)),
                ('doublePaneWindows', models.BooleanField(blank=True, default=False)),
                ('fireplace', models.BooleanField(blank=True, default=False)),
                ('intercom', models.BooleanField(blank=True, default=False)),
                ('jettedTub', models.BooleanField(blank=True, default=False)),
                ('securitySystem', models.BooleanField(blank=True, default=False)),
                ('CCentral', models.BooleanField(blank=True, default=False)),
                ('CEvaporative', models.BooleanField(blank=True, default=False)),
                ('CGeothermal', models.BooleanField(blank=True, default=False)),
                ('CRefrigeration', models.BooleanField(blank=True, default=False)),
                ('CSolar', models.BooleanField(blank=True, default=False)),
                ('CWall', models.BooleanField(blank=True, default=False)),
                ('COther', models.BooleanField(blank=True, default=False)),
                ('CNone', models.BooleanField(blank=True, default=False)),
                ('HForcedAir', models.BooleanField(blank=True, default=False)),
                ('HGeothermal', models.BooleanField(blank=True, default=False)),
                ('HHeatPump', models.BooleanField(blank=True, default=False)),
                ('HRadiant', models.BooleanField(blank=True, default=False)),
                ('HStove', models.BooleanField(blank=True, default=False)),
                ('HWall', models.BooleanField(blank=True, default=False)),
                ('HOther', models.BooleanField(blank=True, default=False)),
                ('FCoal', models.BooleanField(blank=True, default=False)),
                ('FElectric', models.BooleanField(blank=True, default=False)),
                ('FGas', models.BooleanField(blank=True, default=False)),
                ('FOil', models.BooleanField(blank=True, default=False)),
                ('FPropaneButane', models.BooleanField(blank=True, default=False)),
                ('FSolar', models.BooleanField(blank=True, default=False)),
                ('FWoodPellet', models.BooleanField(blank=True, default=False)),
                ('FOther', models.BooleanField(blank=True, default=False)),
                ('FNone', models.BooleanField(blank=True, default=False)),
                ('basketballCourt', models.BooleanField(blank=True, default=False)),
                ('doorman', models.BooleanField(blank=True, default=False)),
                ('elevator', models.BooleanField(blank=True, default=False)),
                ('fitnessCenter', models.BooleanField(blank=True, default=False)),
                ('gatedEntry', models.BooleanField(blank=True, default=False)),
                ('nearTransportation', models.BooleanField(blank=True, default=False)),
                ('tennisCourt', models.BooleanField(blank=True, default=False)),
                ('RadioGroup_Architectural', models.CharField(blank=True, max_length=6, null=True)),
                ('Brick', models.BooleanField(blank=True, default=False)),
                ('CementConcrete', models.BooleanField(blank=True, default=False)),
                ('Stone', models.BooleanField(blank=True, default=False)),
                ('EOther', models.BooleanField(blank=True, default=False)),
                ('FloorCount', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('ApartmentsCount', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('barbecueArea', models.BooleanField(blank=True, default=False)),
                ('dock', models.BooleanField(blank=True, default=False)),
                ('garden', models.BooleanField(blank=True, default=False)),
                ('hotTubSpa', models.BooleanField(blank=True, default=False)),
                ('pool', models.BooleanField(blank=True, default=False)),
                ('rvParking', models.BooleanField(blank=True, default=False)),
                ('sauna', models.BooleanField(blank=True, default=False)),
                ('sprinklerSystem', models.BooleanField(blank=True, default=False)),
                ('PGarageAttached', models.BooleanField(blank=True, default=False)),
                ('PGarageDetached', models.BooleanField(blank=True, default=False)),
                ('POffStreet', models.BooleanField(blank=True, default=False)),
                ('POnStreet', models.BooleanField(blank=True, default=False)),
                ('PNone', models.BooleanField(blank=True, default=False)),
                ('garageSpaces', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True)),
                ('RAsphalt', models.BooleanField(blank=True, default=False)),
                ('RMetal', models.BooleanField(blank=True, default=False)),
                ('RTiles', models.BooleanField(blank=True, default=False)),
                ('VOnSea', models.BooleanField(blank=True, default=False)),
                ('VMountain', models.BooleanField(blank=True, default=False)),
                ('VOnStreet', models.BooleanField(blank=True, default=False)),
                ('VOther', models.BooleanField(blank=True, default=False)),
                ('fullPhoneNumber', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('list_date', models.DateTimeField(default=datetime.datetime(2019, 9, 26, 9, 16, 37, 72844))),
                ('is_published', models.BooleanField(default=False)),
                ('views', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('background_image', models.ImageField(default='img/header.jpg', upload_to='backgrounds/2019/09/26')),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_score', models.IntegerField(db_index=True, default=0)),
                ('num_vote_up', models.PositiveIntegerField(db_index=True, default=0)),
                ('num_vote_down', models.PositiveIntegerField(db_index=True, default=0)),
                ('message', markdownx.models.MarkdownxField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('subtitle', models.CharField(max_length=255)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postsUser', to=settings.AUTH_USER_MODEL)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='listings.Topic')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimeOpenHouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateField', models.DateField(blank=True, null=True)),
                ('timeDropDownStart', models.IntegerField(choices=[(0, '8:00 AM'), (1, '8:30 AM'), (2, '9:00 AM'), (3, '9:30 AM'), (4, '10:00 AM'), (5, '10:30 AM'), (6, '11:00 AM'), (7, '11:30 AM'), (8, '12:00 PM'), (9, '12:30 PM'), (10, '1:00 PM'), (11, '1:30 PM'), (12, '2:00 PM'), (13, '2:30 PM'), (14, '3:00 PM'), (15, '3:30 PM'), (16, '4:00 PM'), (17, '4:30 PM'), (18, '5:00 PM'), (19, '5:30 PM'), (20, '6:00 PM'), (21, '6:30 PM'), (22, '7:00 PM'), (23, '7:30 PM'), (24, '8:00 PM'), (25, '8:30 PM')], default=0)),
                ('timeDropDownEnd', models.IntegerField(choices=[(0, '8:00 AM'), (1, '8:30 AM'), (2, '9:00 AM'), (3, '9:30 AM'), (4, '10:00 AM'), (5, '10:30 AM'), (6, '11:00 AM'), (7, '11:30 AM'), (8, '12:00 PM'), (9, '12:30 PM'), (10, '1:00 PM'), (11, '1:30 PM'), (12, '2:00 PM'), (13, '2:30 PM'), (14, '3:00 PM'), (15, '3:30 PM'), (16, '4:00 PM'), (17, '4:30 PM'), (18, '5:00 PM'), (19, '5:30 PM'), (20, '6:00 PM'), (21, '6:30 PM'), (22, '7:00 PM'), (23, '7:30 PM'), (24, '8:00 PM'), (25, '8:30 PM')], default=0)),
                ('listing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TimeOpenHouse', to='listings.Listing')),
            ],
        ),
        migrations.CreateModel(
            name='Save',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Save', to='listings.Listing')),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='default.png', null=True, upload_to=listings.models.user_directory_path)),
                ('listing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Photos', to='listings.Listing')),
            ],
        ),
    ]
